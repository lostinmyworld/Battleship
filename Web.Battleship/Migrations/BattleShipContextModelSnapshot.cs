// <auto-generated />
using Data.EfCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Web.Battleship.Migrations
{
    [DbContext(typeof(BattleShipContext))]
    partial class BattleShipContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Data.EfCore.Models.Battleship", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("GridId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHit")
                        .HasColumnType("bit");

                    b.Property<int>("MaxX")
                        .HasColumnType("int");

                    b.Property<int>("MaxY")
                        .HasColumnType("int");

                    b.Property<int>("MinX")
                        .HasColumnType("int");

                    b.Property<int>("MinY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GridId");

                    b.ToTable("Battleships");
                });

            modelBuilder.Entity("Data.EfCore.Models.CannonBall", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("GridId")
                        .HasColumnType("int");

                    b.Property<bool>("Hit")
                        .HasColumnType("bit");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GridId");

                    b.ToTable("CannonBall");
                });

            modelBuilder.Entity("Data.EfCore.Models.Grid", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("DimensionX")
                        .HasColumnType("int");

                    b.Property<int>("DimensionY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Grids");
                });

            modelBuilder.Entity("Data.EfCore.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("GridId")
                        .HasColumnType("int");

                    b.Property<bool>("IsWinner")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GridId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Data.EfCore.Models.Battleship", b =>
                {
                    b.HasOne("Data.EfCore.Models.Grid", "Grid")
                        .WithMany("Ship")
                        .HasForeignKey("GridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grid");
                });

            modelBuilder.Entity("Data.EfCore.Models.CannonBall", b =>
                {
                    b.HasOne("Data.EfCore.Models.Grid", "Grid")
                        .WithMany("CannonBallsShot")
                        .HasForeignKey("GridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grid");
                });

            modelBuilder.Entity("Data.EfCore.Models.Player", b =>
                {
                    b.HasOne("Data.EfCore.Models.Grid", "Grid")
                        .WithMany()
                        .HasForeignKey("GridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grid");
                });

            modelBuilder.Entity("Data.EfCore.Models.Grid", b =>
                {
                    b.Navigation("CannonBallsShot");

                    b.Navigation("Ship");
                });
#pragma warning restore 612, 618
        }
    }
}
