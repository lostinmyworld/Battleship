// <auto-generated />
using System;
using Data.EfCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Web.Battleship.Migrations
{
    [DbContext(typeof(BattleShipContext))]
    partial class BattleShipContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.EfCore.Models.BattleSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<int?>("Player1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Player2Id")
                        .HasColumnType("int");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.ToTable("BattleSession");
                });

            modelBuilder.Entity("Data.EfCore.Models.Battleship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoardId")
                        .HasColumnType("int");

                    b.Property<byte>("ColumnStart")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HitsTaken")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("bit");

                    b.Property<int>("Orientation")
                        .HasColumnType("int");

                    b.Property<byte>("RowStart")
                        .HasColumnType("tinyint");

                    b.Property<int>("ShipType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Battleship");
                });

            modelBuilder.Entity("Data.EfCore.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DimensionX")
                        .HasColumnType("int");

                    b.Property<int>("DimensionY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Board");
                });

            modelBuilder.Entity("Data.EfCore.Models.CannonBall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoardId")
                        .HasColumnType("int");

                    b.Property<byte>("Column")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Hit")
                        .HasColumnType("bit");

                    b.Property<byte>("Row")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("CannonBall");
                });

            modelBuilder.Entity("Data.EfCore.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoardId")
                        .HasColumnType("int");

                    b.Property<bool>("IsWinner")
                        .HasColumnType("bit");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Data.EfCore.Models.BattleSession", b =>
                {
                    b.HasOne("Data.EfCore.Models.Player", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1Id");

                    b.HasOne("Data.EfCore.Models.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2Id");

                    b.Navigation("Player1");

                    b.Navigation("Player2");
                });

            modelBuilder.Entity("Data.EfCore.Models.Battleship", b =>
                {
                    b.HasOne("Data.EfCore.Models.Board", "Board")
                        .WithMany("Ships")
                        .HasForeignKey("BoardId");

                    b.Navigation("Board");
                });

            modelBuilder.Entity("Data.EfCore.Models.CannonBall", b =>
                {
                    b.HasOne("Data.EfCore.Models.Board", "Board")
                        .WithMany("CannonBallsShot")
                        .HasForeignKey("BoardId");

                    b.Navigation("Board");
                });

            modelBuilder.Entity("Data.EfCore.Models.Player", b =>
                {
                    b.HasOne("Data.EfCore.Models.Board", "Board")
                        .WithMany()
                        .HasForeignKey("BoardId");

                    b.Navigation("Board");
                });

            modelBuilder.Entity("Data.EfCore.Models.Board", b =>
                {
                    b.Navigation("CannonBallsShot");

                    b.Navigation("Ships");
                });
#pragma warning restore 612, 618
        }
    }
}
